@page "/product/create"
@page "/product/edit/{id:int}"
@using Tangy_Business.Repository

@inject ICategoryRepository _categoryRepository
@inject IProductRepository _ProductRepository;
@inject NavigationManager _navigationManager;

<div class="row m-2">
    <h3 class="card-title text-primaryy mb-3 ml-3">@Title Category</h3>
    
    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif"/>
            </div>
        }
        else
        {
            
        <EditForm Model="Product" OnValidSubmit="UpsertProduct">
            <DataAnnotationsValidator/>
            @* <ValidationSummary/> *@
            <div class="form-group">
                <label>Name</label>
                <InputText @bind-Value="Category.Name" class="form-control"/>
                <ValidationMessage For="() => Category.Name"></ValidationMessage>
            </div>
            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                <NavLink href="category" class="btn btn-secondary">Back to Index</NavLink>
            </div>
        </EditForm>
        }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private ProductDTO Product { get; set; }
    private IEnumerable<CategoryDTO> Categories { get; set; } = new List<CategoryDTO>();
    private string Title { get; set; } = "Create";
    
    public bool IsLoading { get; set; }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadProduct();
        }
    }

    private async Task LoadProduct()
    {
        IsLoading = true;
        StateHasChanged();
        Categories = await _categoryRepository.GetAll();
        if (Id != 0)
        {
            // update
            Title = "Update";
            Product = await _ProductRepository.Get(Id);
        }
        IsLoading = false;
        StateHasChanged();
    }

    private async Task UpsertProduct()
    {
        if (Product.Id == 0)
        {
            await _ProductRepository.Create(Product);
        }
        else
        {
            await _ProductRepository.Update(Product);
        }
        _navigationManager.NavigateTo("product");
    }
}